{
  "$schema-template": "1.0.0",
  "modulesContent": {
    "$edgeAgent": {
      "properties.desired": {
        "schemaVersion": "1.1",
        "runtime": {
          "type": "docker",
          "settings": {
            "minDockerVersion": "v1.25",
            "loggingOptions": "",
            "registryCredentials": {
              "my_acr": {
                "username": "${ACR_USER}",
                "password": "${ACR_PASSWORD}",
                "address": "${ACR_ADDRESS}"
              }
            }
          }
        },
        "systemModules": {
          "edgeAgent": {
            "type": "docker",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-agent:1.2",
              "createOptions": {}
            }
          },
          "edgeHub": {
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-hub:1.2",
              "createOptions": {
                "HostConfig": {
                  "PortBindings": {
                    "5671/tcp": [
                      {
                        "HostPort": "5671"
                      }
                    ],
                    "8883/tcp": [
                      {
                        "HostPort": "8883"
                      }
                    ],
                    "443/tcp": [
                      {
                        "HostPort": "443"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "modules": {
          "tempSensor": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-simulated-temperature-sensor:1.0",
              "createOptions": {}
            }
          },
	 "EdgeModuleAnomalyDetector": {
                        "settings": {
                            "image": "mcr.microsoft.com/azure-cognitive-services/decision/anomaly-detector",
                            "createOptions": "{\"ExposedPorts\":{\"5000/tcp\":{}},\"HostConfig\":{\"PortBindings\":{\"5000/tcp\":[{\"HostPort\":\"5000\"}]}}}"
                        },
                        "type": "docker",
                        "version": "1.0",
                        "env": {
                            "Eula": {
                                "value": "accept"
                            },
                            "Billing": {
                                "value": "https://cctestanamalydetector.cognitiveservices.azure.com/"
                            },
                            "ApiKey": {
                                "value": "3850bf4b542648d29912c8dd86d87afc"
                            }
                        },
                        "status": "running",
                        "restartPolicy": "always"
          },
          "FilterModule": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "never",
            "settings": {
              "image": "${MODULES.FilterModule.debug}",
              "createOptions": {
                "ExposedPorts": {
                  "5678/tcp": {}
                },
                "HostConfig": {
                  "PortBindings": {
                    "5678/tcp": [
                      {
                        "HostPort": "5678"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "$edgeHub": {
      "properties.desired": {
        "schemaVersion": "1.1",
        "routes": {
          "FilterModuleToIoTHub": "FROM /messages/modules/FilterModule/outputs/* INTO $upstream",
          "sensorToFilterModule": "FROM /messages/modules/tempSensor/outputs/temperatureOutput INTO BrokeredEndpoint(\"/modules/FilterModule/inputs/input1\")"
        },
        "storeAndForwardConfiguration": {
          "timeToLiveSecs": 7200
        }
      }
    },
    "tempSensor": {
        "properties.desired": {
          "SendData": true,
          "SendInterval": 15
        }
      }
  }
}
